/**
 * Auto-generated TypeScript types for StockWise API
 * 
 * Generated on: 2025-07-27T15:17:47.194Z
 * Source: http://localhost:8000/openapi.json
 * 
 * ⚠️  DO NOT EDIT THIS FILE MANUALLY
 * Run 'npm run generate-types' to regenerate
 */

/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Register
         * @description Register a new user.
         */
        post: operations["register_api_v1_auth_register_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Login
         * @description Login and get access token.
         */
        post: operations["login_api_v1_auth_login_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Read Users Me
         * @description Get current user info.
         */
        get: operations["read_users_me_api_v1_auth_me_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Refresh Token
         * @description Refresh access token.
         */
        post: operations["refresh_token_api_v1_auth_refresh_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Logout
         * @description Logout user by clearing the access token cookie.
         */
        post: operations["logout_api_v1_auth_logout_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/holdings/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Holdings
         * @description Get all holdings for the current user.
         */
        get: operations["get_holdings_api_v1_holdings__get"];
        put?: never;
        /**
         * Create Holding
         * @description Create a new holding for the current user.
         */
        post: operations["create_holding_api_v1_holdings__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/holdings/portfolio": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Portfolio Summary
         * @description Get portfolio summary with total value, P/L, etc.
         */
        get: operations["get_portfolio_summary_api_v1_holdings_portfolio_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/holdings/allocation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Allocation Data
         * @description Get portfolio allocation breakdown by sector, country, etc.
         */
        get: operations["get_allocation_data_api_v1_holdings_allocation_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/holdings/{holding_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Update Holding
         * @description Update a specific holding.
         */
        put: operations["update_holding_api_v1_holdings__holding_id__put"];
        post?: never;
        /**
         * Delete Holding
         * @description Delete a specific holding.
         */
        delete: operations["delete_holding_api_v1_holdings__holding_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/insights/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate Insights
         * @description Generate AI-powered portfolio insights.
         */
        post: operations["generate_insights_api_v1_insights__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/insights/latest": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Latest Insights
         * @description Get the latest insights for the current user.
         */
        get: operations["get_latest_insights_api_v1_insights_latest_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/risk/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Risk Analysis
         * @description Get comprehensive risk analysis for the user's portfolio.
         */
        get: operations["get_risk_analysis_api_v1_risk__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/risk/heatmap": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Risk Heatmap
         * @description Get risk heatmap data for visualization.
         */
        get: operations["get_risk_heatmap_api_v1_risk_heatmap_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/risk/metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Risk Metrics
         * @description Get detailed risk metrics and calculations.
         */
        get: operations["get_risk_metrics_api_v1_risk_metrics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/stocks/popular": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Popular Stocks
         * @description Get list of popular stocks with enhanced metadata.
         */
        get: operations["get_popular_stocks_api_v1_stocks_popular_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/stocks/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search Stocks
         * @description Search for stocks by symbol or name.
         */
        get: operations["search_stocks_api_v1_stocks_search_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/stocks/quote/{ticker}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Stock Quote
         * @description Get current quote for a specific ticker.
         */
        get: operations["get_stock_quote_api_v1_stocks_quote__ticker__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/stocks/performance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Get Daily Performance
         * @description Get daily performance for multiple tickers.
         */
        post: operations["get_daily_performance_api_v1_stocks_performance_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/stocks/validate/{ticker}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Validate Ticker
         * @description Validate if a ticker exists and is tradeable.
         */
        get: operations["validate_ticker_api_v1_stocks_validate__ticker__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/stocks/cache/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Cache Stats
         * @description Get cache statistics (for debugging).
         */
        get: operations["get_cache_stats_api_v1_stocks_cache_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/stocks/cache/clear": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Clear Cache
         * @description Clear all stock-related cache (for development).
         */
        delete: operations["clear_cache_api_v1_stocks_cache_clear_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/charts/portfolio-history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Portfolio History
         * @description Get portfolio value history over time using real holdings data.
         */
        get: operations["get_portfolio_history_api_v1_charts_portfolio_history_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/charts/performance-comparison": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Performance Comparison
         * @description Get portfolio performance vs market indices using real data.
         */
        get: operations["get_performance_comparison_api_v1_charts_performance_comparison_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/charts/allocation-data": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Allocation Chart Data
         * @description Get real allocation data for pie charts.
         */
        get: operations["get_allocation_chart_data_api_v1_charts_allocation_data_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/charts/portfolio-metrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Portfolio Metrics
         * @description Get additional portfolio metrics for dashboard cards.
         */
        get: operations["get_portfolio_metrics_api_v1_charts_portfolio_metrics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Root */
        get: operations["root__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Health Check */
        get: operations["health_check_health_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AIInsight */
        AIInsight: {
            /** Id */
            id: string;
            /** User Id */
            user_id: number;
            /**
             * Generated At
             * Format: date-time
             */
            generated_at: string;
            risk_summary: components["schemas"]["RiskSummary"];
            /** Diversification Suggestions */
            diversification_suggestions: components["schemas"]["DiversificationSuggestion"][];
            /** Concentration Alerts */
            concentration_alerts: components["schemas"]["ConcentrationAlert"][];
            /** Key Recommendations */
            key_recommendations: string[];
            /** Confidence Score */
            confidence_score: number;
        };
        /**
         * AllocationChartData
         * @description Complete allocation data for all chart types.
         */
        AllocationChartData: {
            /**
             * By Holdings
             * @description Allocation by individual holdings
             */
            by_holdings: components["schemas"]["HoldingAllocationPoint"][];
            /**
             * By Asset Type
             * @description Allocation by asset type
             */
            by_asset_type: components["schemas"]["AllocationDataPoint"][];
            /**
             * By Sector
             * @description Allocation by sector
             */
            by_sector: components["schemas"]["AllocationDataPoint"][];
            /**
             * By Country
             * @description Allocation by country
             */
            by_country: components["schemas"]["AllocationDataPoint"][];
        };
        /** AllocationData */
        AllocationData: {
            /** By Asset Type */
            by_asset_type: Record<string, never>;
            /** By Sector */
            by_sector: Record<string, never>;
            /** By Country */
            by_country: Record<string, never>;
            /** Top Performers */
            top_performers: components["schemas"]["Holding"][];
            /** Worst Performers */
            worst_performers: components["schemas"]["Holding"][];
        };
        /**
         * AllocationDataPoint
         * @description A single allocation data point for pie charts.
         */
        AllocationDataPoint: {
            /**
             * Name
             * @description Asset/sector/country name
             */
            name: string;
            /**
             * Value
             * @description Percentage allocation
             */
            value: number;
            /**
             * Fill
             * @description Chart color
             */
            fill?: string | null;
        };
        /**
         * AssetType
         * @enum {string}
         */
        AssetType: "stock" | "crypto" | "etf" | "bond" | "commodity";
        /** Body_login_api_v1_auth_login_post */
        Body_login_api_v1_auth_login_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /** ConcentrationAlert */
        ConcentrationAlert: {
            /** Type */
            type: string;
            /** Asset Name */
            asset_name: string;
            /** Concentration Percentage */
            concentration_percentage: number;
            /** Risk Level */
            risk_level: string;
            /** Recommendation */
            recommendation: string;
        };
        /** DailyPerformanceResponse */
        DailyPerformanceResponse: {
            /** Performances */
            performances: {
                [key: string]: components["schemas"]["StockQuoteResponse"];
            };
        };
        /** DiversificationSuggestion */
        DiversificationSuggestion: {
            /** Type */
            type: string;
            /** Current Exposure */
            current_exposure: number;
            /** Recommended Exposure */
            recommended_exposure: number;
            /** Suggestion */
            suggestion: string;
            /** Priority */
            priority: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Holding */
        Holding: {
            /**
             * Ticker
             * @description Stock/asset ticker symbol
             */
            ticker: string;
            /** @default stock */
            asset_type: components["schemas"]["AssetType"];
            /**
             * Quantity
             * @description Number of shares/units
             */
            quantity: number;
            /**
             * Buy Price
             * @description Purchase price per unit
             */
            buy_price: number;
            /**
             * Buy Date
             * Format: date-time
             * @description Purchase date
             */
            buy_date: string;
            /** Id */
            id: number;
            /** User Id */
            user_id: number;
            /** Current Price */
            current_price: number;
            /** Sector */
            sector?: string | null;
            /** Country */
            country?: string | null;
            /** Market Cap */
            market_cap?: number | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
            /** Total Value */
            total_value: number;
            /** Total Cost */
            total_cost: number;
            /** Profit Loss */
            profit_loss: number;
            /** Profit Loss Percentage */
            profit_loss_percentage: number;
        };
        /**
         * HoldingAllocationPoint
         * @description A single holding allocation point.
         */
        HoldingAllocationPoint: {
            /**
             * Symbol
             * @description Stock ticker symbol
             */
            symbol: string;
            /**
             * Name
             * @description Asset name
             */
            name: string;
            /**
             * Value
             * @description Total value in dollars
             */
            value: number;
            /**
             * Percentage
             * @description Percentage of portfolio
             */
            percentage: number;
            /**
             * Fill
             * @description Chart color
             */
            fill?: string | null;
        };
        /** HoldingCreate */
        HoldingCreate: {
            /**
             * Ticker
             * @description Stock/asset ticker symbol
             */
            ticker: string;
            /** @default stock */
            asset_type: components["schemas"]["AssetType"];
            /**
             * Quantity
             * @description Number of shares/units
             */
            quantity: number;
            /**
             * Buy Price
             * @description Purchase price per unit
             */
            buy_price: number;
            /**
             * Buy Date
             * Format: date-time
             * @description Purchase date
             */
            buy_date: string;
        };
        /** HoldingUpdate */
        HoldingUpdate: {
            /** Ticker */
            ticker?: string | null;
            /** Quantity */
            quantity?: number | null;
            /** Buy Price */
            buy_price?: number | null;
            /** Buy Date */
            buy_date?: string | null;
        };
        /** InsightRequest */
        InsightRequest: {
            /** User Id */
            user_id: number;
            /**
             * Analysis Type
             * @default full
             */
            analysis_type: string;
        };
        /** InsightResponse */
        InsightResponse: {
            insight: components["schemas"]["AIInsight"];
            /** Portfolio Snapshot */
            portfolio_snapshot: Record<string, never>;
            /** Processing Time Ms */
            processing_time_ms: number;
        };
        /**
         * PerformanceComparisonPoint
         * @description A single point in performance comparison data.
         */
        PerformanceComparisonPoint: {
            /**
             * Date
             * @description Date in YYYY-MM-DD format
             */
            date: string;
            /**
             * Portfolio
             * @description Portfolio percentage change
             */
            portfolio: number;
            /**
             * Sp500
             * @description S&P 500 percentage change
             */
            sp500?: number | null;
            /**
             * Nasdaq
             * @description NASDAQ percentage change
             */
            nasdaq?: number | null;
        };
        /**
         * PerformerData
         * @description Best/worst performer data.
         */
        PerformerData: {
            /**
             * Ticker
             * @description Stock ticker symbol
             */
            ticker: string;
            /**
             * Percentage
             * @description Performance percentage
             */
            percentage: number;
        };
        /**
         * PortfolioHistoryPoint
         * @description A single point in portfolio history.
         */
        PortfolioHistoryPoint: {
            /**
             * Date
             * @description Date in YYYY-MM-DD format
             */
            date: string;
            /**
             * Value
             * @description Portfolio value on this date
             */
            value: number;
            /**
             * Gain
             * @description Gain/loss from previous day
             * @default 0
             */
            gain: number;
        };
        /**
         * PortfolioMetrics
         * @description Additional portfolio metrics for dashboard cards.
         */
        PortfolioMetrics: {
            /** @description Total return data */
            total_return: components["schemas"]["TotalReturnData"];
            /** @description Best performing holding */
            best_performer?: components["schemas"]["PerformerData"] | null;
            /** @description Worst performing holding */
            worst_performer?: components["schemas"]["PerformerData"] | null;
            /**
             * Volatility
             * @description Portfolio volatility assessment
             */
            volatility: string;
            /**
             * Holdings Count
             * @description Number of holdings in portfolio
             */
            holdings_count: number;
        };
        /** PortfolioSummary */
        PortfolioSummary: {
            /** Total Value */
            total_value: number;
            /** Total Cost */
            total_cost: number;
            /** Total Profit Loss */
            total_profit_loss: number;
            /** Total Profit Loss Percentage */
            total_profit_loss_percentage: number;
            /** Holdings Count */
            holdings_count: number;
            /** Holdings */
            holdings: components["schemas"]["Holding"][];
        };
        /** RiskSummary */
        RiskSummary: {
            /** Overall Risk Level */
            overall_risk_level: string;
            /** Risk Score */
            risk_score: number;
            /** Main Concerns */
            main_concerns: string[];
            /** Volatility Estimate */
            volatility_estimate: number;
        };
        /** StockQuoteResponse */
        StockQuoteResponse: {
            /** Symbol */
            symbol: string;
            /** Price */
            price: number;
            /** Change */
            change: number;
            /** Change Percent */
            change_percent: string;
            /** Volume */
            volume: number;
            /** Latest Trading Day */
            latest_trading_day: string;
            /** Source */
            source: string;
        };
        /** StockSearchResponse */
        StockSearchResponse: {
            /** Value */
            value: string;
            /** Label */
            label: string;
            /** Sector */
            sector?: string | null;
            /** Industry */
            industry?: string | null;
            /** Market Cap */
            market_cap?: string | null;
            /** Exchange */
            exchange?: string | null;
        };
        /** Token */
        Token: {
            /** Access Token */
            access_token: string;
            /** Token Type */
            token_type: string;
        };
        /**
         * TotalReturnData
         * @description Total return metrics.
         */
        TotalReturnData: {
            /**
             * Amount
             * @description Total return amount in dollars
             */
            amount: number;
            /**
             * Percentage
             * @description Total return percentage
             */
            percentage: number;
        };
        /** User */
        User: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Full Name */
            full_name?: string | null;
            /** Id */
            id: number;
            /** Is Active */
            is_active: boolean;
            /** Is Verified */
            is_verified: boolean;
            /** Google Id */
            google_id?: string | null;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Updated At
             * Format: date-time
             */
            updated_at: string;
        };
        /** UserCreate */
        UserCreate: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Full Name */
            full_name?: string | null;
            /** Password */
            password: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    register_api_v1_auth_register_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    login_api_v1_auth_login_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_login_api_v1_auth_login_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_users_me_api_v1_auth_me_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    refresh_token_api_v1_auth_refresh_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
        };
    };
    logout_api_v1_auth_logout_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_holdings_api_v1_holdings__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Holding"][];
                };
            };
        };
    };
    create_holding_api_v1_holdings__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HoldingCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Holding"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_portfolio_summary_api_v1_holdings_portfolio_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PortfolioSummary"];
                };
            };
        };
    };
    get_allocation_data_api_v1_holdings_allocation_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllocationData"];
                };
            };
        };
    };
    update_holding_api_v1_holdings__holding_id__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                holding_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HoldingUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Holding"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_holding_api_v1_holdings__holding_id__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                holding_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_insights_api_v1_insights__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InsightRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InsightResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_latest_insights_api_v1_insights_latest_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InsightResponse"];
                };
            };
        };
    };
    get_risk_analysis_api_v1_risk__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_risk_heatmap_api_v1_risk_heatmap_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_risk_metrics_api_v1_risk_metrics_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_popular_stocks_api_v1_stocks_popular_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StockSearchResponse"][];
                };
            };
        };
    };
    search_stocks_api_v1_stocks_search_get: {
        parameters: {
            query: {
                /** @description Search query for stock symbol or name */
                q: string;
                /** @description Maximum number of results */
                limit?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StockSearchResponse"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_stock_quote_api_v1_stocks_quote__ticker__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                ticker: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StockQuoteResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_daily_performance_api_v1_stocks_performance_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": string[];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DailyPerformanceResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    validate_ticker_api_v1_stocks_validate__ticker__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                ticker: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_cache_stats_api_v1_stocks_cache_stats_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    clear_cache_api_v1_stocks_cache_clear_delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_portfolio_history_api_v1_charts_portfolio_history_get: {
        parameters: {
            query?: {
                /** @description Number of days of history */
                days?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PortfolioHistoryPoint"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_performance_comparison_api_v1_charts_performance_comparison_get: {
        parameters: {
            query?: {
                /** @description Number of days of history */
                days?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PerformanceComparisonPoint"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_allocation_chart_data_api_v1_charts_allocation_data_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AllocationChartData"];
                };
            };
        };
    };
    get_portfolio_metrics_api_v1_charts_portfolio_metrics_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PortfolioMetrics"];
                };
            };
        };
    };
    root__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    health_check_health_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
}
